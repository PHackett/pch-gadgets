<?xml version="1.0" encoding="UTF-8" ?>
<Module>

	<ModulePrefs
		title="All Players"
		author="Paul Hackett"
		author_email="TRCCGadgets@paulhackett.com"
		description="For the rendering of all the TRCC players names on one page."
		thumbnail="http://pch-gadgets.googlecode.com/svn/trunk/pch-gadgets/TRCC/images/TRCC-Shield.png"
		width="700"
		height="500"
		scrolling="true">
	</ModulePrefs>

	<UserPref name="linkTarget" display_name="Link URL target" datatype="string" default_value=""/>

	<Content type="html">

		<![CDATA[
			<!--
			Global CSS 
			-->
			<link href="http://pch-gadgets.googlecode.com/svn/trunk/pch-gadgets/TRCC/css/trcc.css" rel="stylesheet" type="text/css">

			<!--
			Placeholder where the generated content will be placed 
			-->
			<div id="content_div"></div>

			<!--
			Include my utilities libraries
			-->
			<script src="http://pch-gadgets.googlecode.com/svn/trunk/pch-gadgets/TRCC/objects/Player.js" type="text/javascript"></script>
			
			<script src="http://pch-gadgets.googlecode.com/svn/trunk/pch-gadgets/utils/GGUtils.js" type="text/javascript"></script>
			<script src="http://pch-gadgets.googlecode.com/svn/trunk/pch-gadgets/utils/GGGadget.js" type="text/javascript"></script>


			<script type="text/javascript">

				//-------------------------------------------------------[renderData]-
				// Render the XML
				//
				// @param response IN The XML whose data we are to render as HTML
				//--------------------------------------------------------------------
				function renderData (response)
				{
					if (response == null || typeof(response) != "object" || response.firstChild == null)
					{
						_gel("content_div").innerHTML = "<i>Invalid data.</i>";
						return;
					}
				
					//
					// Get the user preferences
					//
					var lPrefs = new _IG_Prefs();
					
					GGUtils_setLinkTarget (lPrefs.getString ("linkTarget"));
					
					//
					// Parse the data
					//
					GGTRCC_ParsePlayerRollcallXML (response);
					
					//
					// Make the HTML
					//
					var lHTML="This is a test";
					
					lHTML += " GGTRCC_Player_A().length = " + GGTRCC_Player_A().length + "<br>";
					lHTML += GGTRCC_GetPlayerIndexHTML (GGTRCC_Player_A()) + "<br>;
					
					for (var i=0 ; i<GGTRCC_Player_A().length ; ++i)
					{
						lHTML += GGTRCC_Player_A()[i].Name() + "<br>";
					}
					
			
					//
					// Display HTML string in <div>
					//
					_gel('content_div').innerHTML = lHTML;
				}
				
				//----------------------------------------------------------[display]-
				// Load the XML & call the renderer
				//--------------------------------------------------------------------
				function display()
				{
					GGTRCC_LoadPlayerRollcallXML (_IG_FetchXmlContent, renderData);
				}

				_IG_RegisterOnloadHandler(display);

			</script>
		]]>
	</Content>
</Module>
