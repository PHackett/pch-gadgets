<?xml version="1.0" encoding="UTF-8" ?>
<Module>

	<ModulePrefs
		title="Fixtures for a given year"
		author="Paul Hackett"
		author_email="TRCCGadgets@paulhackett.com"
		description="For the rendering of TRCC fixure lists for a specific year."
		thumbnail="http://pch-gadgets.googlecode.com/svn/trunk/pch-gadgets/TRCC/images/TRCC-Shield.png"
		width="700"
		height="500"
		scrolling="true">
	</ModulePrefs>

	<UserPref name="linkTarget" display_name="Link URL target" datatype="string" default_value=""/>
	<UserPref name="year" display_name="For which year?" datatype="string" default_value=""/>
	<UserPref name="team" display_name="Which team?" datatype="enum" default_value="">
		<EnumValue value="" />
		<EnumValue value="Saturday" />
		<EnumValue value="Sunday" />
		<EnumValue value="Youth" />
	</UserPref>

	<Content type="html">

		<![CDATA[
			<!--
			Global CSS 
			-->
			<link href="http://pch-gadgets.googlecode.com/svn/trunk/pch-gadgets/TRCC/css/trcc.css" rel="stylesheet" type="text/css">

			<!--
			Placeholder where the generated content will be placed 
			-->
			<div id="content_div"></div>

			<!--
			Include my utilities libraries
			-->
			<script src="http://pch-gadgets.googlecode.com/svn/trunk/pch-gadgets/utils/GGUtils.js" type="text/javascript"></script>
			<script src="http://pch-gadgets.googlecode.com/svn/trunk/pch-gadgets/utils/GGGadget.js" type="text/javascript"></script>
			<script src="http://pch-gadgets.googlecode.com/svn/trunk/pch-gadgets/TRCC/utils/TRCCUtils.js" type="text/javascript"></script>
			<script src="http://pch-gadgets.googlecode.com/svn/trunk/pch-gadgets/TRCC/objects/Fixture.js" type="text/javascript"></script>

			<script type="text/javascript">

				var gTeam="";
				var gYear="";
				
				var gXMLSrc="";
	
	
				//--------------------------------------------------------[getTRData]-
				// Returns the text for the "<TR>" string
				//
				// @param aIndex IN Line index
				//
				// @return Constructed <tr> line
				//--------------------------------------------------------------------
				function getTRData (aIndex)
				{
					var lRet="<tr>";
					
					if (!(aIndex % 2))
					{
						lRet = "<tr class='GadgetFixtureAltLine'>";
					}
		
					return (lRet);
				}

				//---------------------------------------------------[processFixture]-
				// Process a single fixture in to HTML
				//
				// @param aFixture IN The fixture we are to render as HTML
				// @param aIndex   IN The index of the fixture
				//
				// @return The rendered fixture data
				//--------------------------------------------------------------------
				function processFixture (aFixture, aIndex)
				{
					var lRet="";
					
					//
					// Start the <tr>
					//
					lRet += getTRData (aIndex);
					
					//
					// Add in the data
					//
					lRet += "<td>" + aFixture.VenueHTML() + "</td>";
					lRet += "<td>" + aFixture.DateHTML() + "</td>";
					lRet += "<td>" + aFixture.OppoHTML() + "</td>";
					lRet += "<td>" + aFixture.TimeHTML() + "</td>";
					lRet += "<td>" + aFixture.ResultHTML() + "</td>";
					
					//
					// Terminate the row
					//
					lRet += "</tr>";
					
					return (lRet);
				}


				//-------------------------------------------------------[renderData]-
				// Render the XML
				//
				// @param response IN The XML whose data we are to render as HTML
				//--------------------------------------------------------------------
				function renderData (response)
				{
					if (response == null || typeof(response) != "object" || response.firstChild == null)
					{
						_gel("content_div").innerHTML = "<i>Invalid data from '" + gXMLSrc + "'</i>";
						return;
					}
			
					//
					// Read the XML into objects
					//
					var lFixtures=new Array();
			
					GGTRCC_LoadFixturesFromXML (response, lFixtures)
			
					var lHTML="";
					
					//
					// Start building HTML string that will be displayed in <div>.
					//
					lHTML += "<table border='0' cellpadding='5' cellspacing='0' width='100%'>";
					
					//
					// Down all the fixtures
					//
					for (var i=0 ; i<lFixtures.length ; ++i)
					{
						lHTML += processFixture (lFixtures[i], i);
					}
					
					//
					// End the table
					//
					lHTML += "</table>";
					
					//
					// Display HTML string in <div>
					//
					_gel('content_div').innerHTML = lHTML;
				}


				//-------------------------------------------------[processSettings]-
				// Determine what year & team
				//--------------------------------------------------------------------
				function processSettings ()
				{
					var lPrefs=new _IG_Prefs();
			
					//
					// First the year - Any userPrefs?
					//
					gYear = TRCCUtils_ProcessPreferences ("year", lPrefs, "2008");
					
					//
					// Now the team ...
					//
					gTeam = TRCCUtils_ProcessPreferences ("team", lPrefs, "Sunday");
					
					//
					// Lastly - Save away the "link target"
					//
					GGUtils_setLinkTarget (lPrefs.getString ("linkTarget"));
				}
				
				//----------------------------------------------------------[display]-
				// Load the XML & call the renderer
				//--------------------------------------------------------------------
				function display()
				{
					var lBaseURL = gGGGadget_Root + "TRCC/data/fixtures/";
					
					//
					// Read the user prefs & hosting URL
					//
					processSettings();
					
					gXMLSrc = lBaseURL + gYear + "/" + gTeam + "_Fixtures_Data.xml";
					
					//
					// Get the XML - Callback to function renderData when complete
					//
					_IG_FetchXmlContent(gXMLSrc, renderData);
				}
	
				_IG_RegisterOnloadHandler(display);

			</script>
		]]>
	</Content>
</Module>
